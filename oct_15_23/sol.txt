class Solution {
    
    int compare(String s1,String s2){
        if(s1.length() != s2.length())
            return -1;
        
        // if(s1.equals(s2))
        //     return 0;
        
        for(int i = 0;i<s1.length();i++){
            if(s1.charAt(i) < s2.charAt(i))
                return 1;
            else if (s1.charAt(i) > s2.charAt(i))
                return -1;
        }
        return 0;
    }
    
    public String shortestBeautifulSubstring(String s, int k) {
        int len = s.length();
        ArrayList<Integer> pos = new ArrayList<>();
        for(int i = 0;i<len;i++){
            if(s.charAt(i) == '1')
                pos.add(i);
        }
        
        // for(int p : pos){
        //     System.out.println(p);
        // }
        
        if(pos.size()<k)
            return "";
        
        int min = 100;
        String min_string = s.substring(pos.get(0),pos.get(k-1)+1);
        // System.out.println(min_string);
        for(int i = 1;i<pos.size() - k+1;i++){
            int l = pos.get(i),r = pos.get(i+k-1);
            if(r-l<=min){
                min = r-l;
                String temp = s.substring(l,r+1);
                // System.out.println(temp);
                if(compare(temp,min_string)>0){
                    min_string = temp;
                    // System.out.println(min_string);
                }
            }    
        }
        return min_string;
    }
}